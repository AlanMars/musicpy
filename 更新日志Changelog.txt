2020.7.27
1. 增加了一些全新的语法标记符，使得对于和弦类的某些处理函数的调用更加简洁。

增加的语法标记符如下：(这里的和弦也可以是一条可以产生和弦的音乐代码语句)

    1. '+'标记符，放在一个和弦之前，等价于和弦.up()
    
    2. '-'标记符，放在一个和弦之前，等价于和弦.down()
    
    3. '~'标记符，放在一个和弦之前，等价于和弦.reverse()
    
    4. '//'连接符，放在两个和弦a, b之间，等价于a.add(b, mode='after'),能够将
    a, b两个和弦进行连接，并且避免两个和弦的音完全重叠的情况。(如果使用a + b,
    也可以同样对a和b进行连接，但是当和弦a的所有的音都是0间隔的情况下（也就是和弦a是一个柱式和弦，
    所有的音同时一起弹），直接a+b会让和弦b的音与和弦a的音直接重叠，因为和弦a和b之前没有间隔，
    使用a.period(n) + b可以解决这个问题，n为和弦a与b之前需要的间隔，但是这样做比较麻烦。
    因此这个'//'连接符，等价于使用a.add(b, mode='after')，add函数在after的模式下，会自动计算
    a和b进行连接使得b的音在a的音之后所需要的最短的间隔，然后把这个间隔加在a和b之间，然后进行连接。
    
    5. '&'连接符，放在两个和弦a, b之间，等价于a.add(b, mode='head'),当b为一个tuple的时候，如果b有两个元素，
    比如b为(c, i),那么等价于a.add(c, start=i, mode='head')。这个连接符的作用是把和弦a和b作为两个声部放在一起，
    也就是让a和b同时开始演奏，如果要b稍微迟一些演奏，那么就用（b,偏移的时间秒数）来代替这个连接符后面的b。
    
    6. '/'连接符，放在和弦a和一个音符之前，如果这个音符的音名不在和弦a里面，那么等价于在和弦a的下方加上这个音符
    作为bass。如果这个音符的音名在和弦a里面，那么等价于和弦a的对于这个音符的转位。

2. 新增了trans函数，能够直接对一个完整的和弦名进行解析，包括常规的[和弦根音+和弦类型]的模式，[和弦/音符或者和弦]的
和弦转位（或者加新的音当做bass）或者复合和弦的模式。如果和弦类型不写，则判断为大三和弦。
举例：trans('C')会得到C大三和弦。
trans('Amaj7')会得到A大七和弦。
trans('C/D')会得到C大三和弦加上D作为最低音。
trans('Am/C')会得到A小三和弦的第一转位，也就是C作为最低音的转位。
trans('E/Cmaj')会得到E大三和弦下面是C大三和弦的复合和弦。
